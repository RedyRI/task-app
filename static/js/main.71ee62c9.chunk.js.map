{"version":3,"sources":["components/Modal.js","components/Overview.js","App.js","index.js"],"names":["Modal","props","ReactDOM","createPortal","className","onClick","onClose","handleDelete","taskId","document","getElementById","Overview","tasks","this","handleEditBtn","handleChangeEdit","onOpen","scope","colSpan","map","task","num","toEdit","id","value","text","onChange","e","icon","faSave","faEdit","openModal","faTrashAlt","Component","App","handleClick","console","log","handleSubmit","preventDefault","state","setState","concat","Date","getDate","getMonth","handleChange","target","uniqid","taskToDelete","findIndex","splice","taskToEdit","find","taskToEditIndex","taskOpenModal","taskOpenModalIndex","isOpen","onSubmit","type","render","StrictMode"],"mappings":"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","file":"static/js/main.71ee62c9.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\nfunction Modal(props) {\r\n\r\n  return ReactDOM.createPortal(\r\n  <div className='Modal'>\r\n    <div className='Modal__container'>\r\n      <button onClick={props.onClose} className='Modal__close-button'>x</button>\r\n      <div>\r\n      <p className='delete-msg'>You are about to delete a task</p>\r\n      <button onClick={props.onClose} className='btn btn-primary mr-4'> cancel </button>\r\n      <button onClick={() => props.handleDelete(props.taskId)} className='btn btn-danger mr-4'> Delete </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ,\r\n  document.getElementById('modal'))\r\n}\r\n\r\nexport default Modal","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faSave } from '@fortawesome/free-solid-svg-icons'\r\nimport '../Overview.css'\r\nimport Modal from './Modal'\r\nclass Overview extends Component {\r\n  render() {\r\n    const tasks = this.props.tasks\r\n    const handleDelete = this.props.handleDelete\r\n    const handleEditBtn = this.props.handleEditBtn\r\n    const handleChangeEdit = this.props.handleChangeEdit\r\n    const onClose = this.props.onClose\r\n    const onOpen = this.props.onOpen\r\n    return(\r\n      <div>\r\n          <table className='table  table-striped'>\r\n          <thead>\r\n            <tr>\r\n              <th className='th1' scope='col'>D/M</th>\r\n              <th className='th2' scope='col'>task</th>\r\n              <th className='th3' scope='col' colSpan='2'>actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {tasks.map(task => {\r\n            return(\r\n              <tr key={task.id}>\r\n                <th scope='row'>{task.num}</th>\r\n                <td >{task.toEdit ? \r\n                  <input \r\n                    className='edit-input' \r\n                    id={`editedTask${task.num}`}\r\n                    value={task.text} \r\n                    onChange={(e) => handleChangeEdit(task.id, e)}\r\n                    /> : \r\n                    task.text}</td>\r\n                <td className='edit-btn'>\r\n                <button \r\n                  className='btnn' \r\n                  onClick={() => handleEditBtn(task.id)}>\r\n                  {task.toEdit ? \r\n                  <FontAwesomeIcon \r\n                  className='icon icon-save' \r\n                  icon={faSave} /> : \r\n                  <FontAwesomeIcon \r\n                  className='icon icon-edit' \r\n                  icon={faEdit} /> }  \r\n                </button> \r\n                </td>\r\n                <td className='delete-btn' >\r\n                  {task.openModal &&\r\n                  <Modal \r\n                  taskId={task.id}\r\n                  onClose={onClose}\r\n                  handleDelete={handleDelete}\r\n                  />\r\n                  }\r\n                <button \r\n                  onClick={(e) => onOpen(task.id, e)} \r\n                  className='btnn' >\r\n                  <FontAwesomeIcon \r\n                  className='icon icon-del' \r\n                  icon={faTrashAlt} /> \r\n                </button> \r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n          </tbody>\r\n          </table>\r\n        {/* </ul> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Overview","import React, { Component } from 'react'\nimport './App.css';\nimport Overview from './components/Overview'\nimport uniqid from 'uniqid'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      task: {\n        text: '',\n        id: '',\n        num: `${(new Date()).getDate()}/${(new Date()).getMonth()}`,\n        toEdit: false,\n        openModal: false\n      },\n      tasks: [],\n      isOpen: false,\n    }\n  }\n\n  handleClick = e => {\n    console.log('the btn was cliccked')\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if(this.state.task.text === '') {\n      return null\n    }\n    this.setState({\n      tasks: this.state.tasks.concat(this.state.task),\n      task: {\n        text : '',\n        id: '',\n        num: `${(new Date()).getDate()}/${(new Date()).getMonth()}`,\n        toEdit: false,\n        openModal: false,\n      },\n    })\n  }\n\n  handleChange = e => {\n    this.setState({\n      task: {\n        text: e.target.value,\n        id: uniqid(),\n        num: this.state.task.num,\n        toEdit: false,\n        openModal: false\n      },\n    })\n  }\n\n  handleDelete = (id) => {\n    const taskToDelete = this.state.tasks.findIndex(task => task.id === id)\n    this.state.tasks.splice(taskToDelete, 1)\n    this.setState({\n      tasks: this.state.tasks\n    })\n  }\n  \n  handleEditBtn = (id) => {\n    console.log(id);\n    let taskToEdit = this.state.tasks.find(task => task.id === id)\n    taskToEdit.toEdit = !taskToEdit.toEdit\n    let taskToEditIndex = this.state.tasks.findIndex(task => task.id === id)\n    this.state.tasks.splice(taskToEditIndex, 1, taskToEdit)\n    this.setState({\n      tasks: this.state.tasks\n    })\n  }\n\n  onClose = (e) => {\n    this.state.tasks.map(task=> {\n      task.openModal = false\n    })\n    this.setState({\n      tasks: this.state.tasks\n    })\n  }\n\n  onOpen = (id, e) => {\n    console.log(id);\n    let taskOpenModal = this.state.tasks.find(task => task.id === id)\n    const taskOpenModalIndex = this.state.tasks.findIndex(task => task.id === id)\n    taskOpenModal.openModal = true;\n    this.state.tasks.splice(taskOpenModalIndex, 1, taskOpenModal)\n    this.setState({\n      tasks: this.state.tasks\n    })\n  }\n\n  handleChangeEdit = (id, e) => {\n    console.log(id);\n    let taskToEdit = this.state.tasks.find(task => task.id === id)\n    const taskToEditIndex = this.state.tasks.findIndex(task => task.id === id)\n    taskToEdit.text = e.target.value\n    this.state.tasks.splice(taskToEditIndex, 1, taskToEdit)\n    this.setState({\n      tasks: this.state.tasks\n    })\n  }\n\n  render() {\n    const {task, tasks } = this.state\n    return (\n      <div className=\"App\">\n      <form onSubmit={this.handleSubmit}>\n        <div className='form-group'>\n          <label >Enter a new task: </label>\n          <input \n            onChange={this.handleChange} \n            className='form-control form__inp' \n            type='text' \n            value={task.text}/>\n          <button \n            onClick={this.handleClick} \n            type='submit' \n            className='btn btn-primary'>Add Task</button>\n        </div>\n      </form>\n      <Overview \n        tasks={tasks}\n        handleEditBtn={this.handleEditBtn}\n        handleDelete={this.handleDelete}\n        onClose={this.onClose}\n        onOpen={this.onOpen}\n        isOpen={this.state.isOpen}\n        handleChangeEdit={this.handleChangeEdit}\n        />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}